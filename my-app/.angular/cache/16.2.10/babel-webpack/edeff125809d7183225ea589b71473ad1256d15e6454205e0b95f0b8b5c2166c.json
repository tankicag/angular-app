{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/sorter.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./filter-textbox.component\";\nimport * as i5 from \"../../shared/capitalize.pipe\";\nconst _c0 = function (a1) {\n  return [\"/orders\", a1];\n};\nfunction CustomersListComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"a\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"capitalize\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cust_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c0, cust_r3.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 4, cust_r3.name), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cust_r3.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(9, 6, cust_r3.orderTotal, ctx_r0.currencyCode, \"symbol\"));\n  }\n}\nfunction CustomersListComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 6);\n    i0.ɵɵtext(2, \"\\u00A0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(5, 1, ctx_r1.customersOrderTotal, ctx_r1.currencyCode, \"symbol\"), \" \");\n  }\n}\nfunction CustomersListComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵtext(2, \"No customers found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CustomersListComponent {\n  get customers() {\n    return this._customers;\n  }\n  set customers(value) {\n    if (value) {\n      this.filteredCustomers = this._customers = value;\n      this.calculateOrders();\n    }\n  }\n  constructor(sortedService) {\n    this.sortedService = sortedService;\n    this._customers = [];\n    this.filteredCustomers = [];\n    this.currencyCode = 'USD';\n  }\n  ngOnInit() {}\n  calculateOrders() {\n    this.customersOrderTotal = 0;\n    this.filteredCustomers.forEach(cust => {\n      this.customersOrderTotal += cust.orderTotal;\n    });\n  }\n  filter(data) {\n    if (data) {\n      this.filteredCustomers = this.customers.filter(cust => {\n        return cust.name.toLowerCase().indexOf(data.toLowerCase()) > -1 || cust.city.toLowerCase().indexOf(data.toLowerCase()) > -1 || cust.orderTotal.toString().indexOf(data) > -1;\n      });\n    } else {\n      this.filteredCustomers = this.customers;\n    }\n    this.calculateOrders();\n  }\n  sort(prop) {\n    this.sortedService.sort(this.filteredCustomers, prop);\n  }\n  static #_ = this.ɵfac = function CustomersListComponent_Factory(t) {\n    return new (t || CustomersListComponent)(i0.ɵɵdirectiveInject(i1.SorterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomersListComponent,\n    selectors: [[\"app-customers-list\"]],\n    inputs: {\n      customers: \"customers\"\n    },\n    decls: 17,\n    vars: 4,\n    consts: [[3, \"chnaged\"], [1, \"table\", \"table-hover\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"routerLink\"], [\"colspan\", \"2\"], [\"colspan\", \"4\"]],\n    template: function CustomersListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"filter-textbox\", 0);\n        i0.ɵɵlistener(\"chnaged\", function CustomersListComponent_Template_filter_textbox_chnaged_0_listener($event) {\n          return ctx.filter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"br\")(2, \"br\");\n        i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\", 2);\n        i0.ɵɵlistener(\"click\", function CustomersListComponent_Template_th_click_6_listener() {\n          return ctx.sort(\"name\");\n        });\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 2);\n        i0.ɵɵlistener(\"click\", function CustomersListComponent_Template_th_click_8_listener() {\n          return ctx.sort(\"city\");\n        });\n        i0.ɵɵtext(9, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 2);\n        i0.ɵɵlistener(\"click\", function CustomersListComponent_Template_th_click_10_listener() {\n          return ctx.sort(\"orderTotal\");\n        });\n        i0.ɵɵtext(11, \"Order Total\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, CustomersListComponent_tr_12_Template, 10, 12, \"tr\", 3);\n        i0.ɵɵtemplate(13, CustomersListComponent_tr_13_Template, 6, 5, \"tr\", 4);\n        i0.ɵɵtemplate(14, CustomersListComponent_tr_14_Template, 3, 0, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15);\n        i0.ɵɵelement(16, \"br\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredCustomers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredCustomers && ctx.filteredCustomers.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.filteredCustomers || !ctx.filteredCustomers.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\\nNumber of Custom \", ctx.filteredCustomers.length, \"\\n\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.FilterTextboxComponent, i2.CurrencyPipe, i5.CapitalizePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","cust_r3","id","ɵɵtextInterpolate1","ɵɵpipeBind1","name","ɵɵtextInterpolate","city","ɵɵpipeBind3","orderTotal","ctx_r0","currencyCode","ctx_r1","customersOrderTotal","CustomersListComponent","customers","_customers","value","filteredCustomers","calculateOrders","constructor","sortedService","ngOnInit","forEach","cust","filter","data","toLowerCase","indexOf","toString","sort","prop","_","ɵɵdirectiveInject","i1","SorterService","_2","selectors","inputs","decls","vars","consts","template","CustomersListComponent_Template","rf","ctx","ɵɵlistener","CustomersListComponent_Template_filter_textbox_chnaged_0_listener","$event","ɵɵelement","CustomersListComponent_Template_th_click_6_listener","CustomersListComponent_Template_th_click_8_listener","CustomersListComponent_Template_th_click_10_listener","ɵɵtemplate","CustomersListComponent_tr_12_Template","CustomersListComponent_tr_13_Template","CustomersListComponent_tr_14_Template","length"],"sources":["/workspaces/angular-app/my-app/src/app/customers/customers-list/customers-list.component.ts","/workspaces/angular-app/my-app/src/app/customers/customers-list/customers-list.component.html"],"sourcesContent":["import { Component, OnInit, Input, SimpleChange } from '@angular/core';\nimport { ICustomer } from '../../shared/interfaces';\nimport { SorterService } from '../../core/sorter.service';\n\n@Component({\n  selector: 'app-customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: ['./customers-list.component.css'],\n})\nexport class CustomersListComponent implements OnInit {\n  private _customers: ICustomer[] = [];\n\n  @Input() get customers(): ICustomer[] {\n    return this._customers;\n  }\n\n  set customers(value: ICustomer[]) {\n    if (value) {\n      this.filteredCustomers = this._customers = value;\n      this.calculateOrders();\n    }\n  }\n\n  filteredCustomers: any[] = [];\n  customersOrderTotal: number;\n  currencyCode: string = 'USD';\n\n  constructor(private sortedService: SorterService) {}\n\n  ngOnInit() {}\n\n  calculateOrders() {\n    this.customersOrderTotal = 0;\n    this.filteredCustomers.forEach((cust: ICustomer) => {\n      this.customersOrderTotal += cust.orderTotal!;\n    });\n  }\n\n  filter(data: string) {\n    if (data) {\n      this.filteredCustomers = this.customers.filter((cust: ICustomer) => {\n        return (\n          cust.name.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n          cust.city.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n          cust.orderTotal!.toString().indexOf(data) > -1\n        );\n      });\n    } else {\n      this.filteredCustomers = this.customers;\n    }\n    this.calculateOrders();\n  }\n  sort(prop: string) {\n    this.sortedService.sort(this.filteredCustomers, prop);\n  }\n}\n","<filter-textbox (chnaged)=\"filter($event)\"></filter-textbox>\n<br />\n<br />\n<table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th (click)=\"sort('name')\">Name</th>\n      <th (click)=\"sort('city')\">City</th>\n      <th (click)=\"sort('orderTotal')\">Order Total</th>\n    </tr>\n  </thead>\n  <tr *ngFor=\"let cust of filteredCustomers\">\n    <td>\n      <a [routerLink]=\"['/orders', cust.id]\">\n        {{ cust.name | capitalize }}\n      </a>\n    </td>\n    <td>{{ cust.city }}</td>\n    <td>{{ cust.orderTotal | currency : currencyCode : \"symbol\" }}</td>\n  </tr>\n  <tr *ngIf=\"filteredCustomers && filteredCustomers.length\">\n    <td colspan=\"2\">&nbsp;</td>\n    <td>\n      {{ customersOrderTotal | currency : currencyCode : \"symbol\" }}\n    </td>\n  </tr>\n  <tr *ngIf=\"!filteredCustomers || !filteredCustomers.length\">\n    <td colspan=\"4\">No customers found</td>\n  </tr>\n</table>\nNumber of Custom {{ filteredCustomers.length }}\n<br />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}