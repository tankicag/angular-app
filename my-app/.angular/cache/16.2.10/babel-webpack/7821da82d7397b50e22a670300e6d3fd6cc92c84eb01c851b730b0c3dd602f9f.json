{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class FilterTextboxComponent {\n  get filter() {\n    return this._filter;\n  }\n  set filter(val) {\n    this._filter = val;\n    this.chnaged.emit(this.filter); //Raise changed event\n  }\n  constructor() {\n    this.chnaged = new EventEmitter();\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function FilterTextboxComponent_Factory(t) {\n    return new (t || FilterTextboxComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterTextboxComponent,\n    selectors: [[\"filter-textbox\"]],\n    inputs: {\n      filter: \"filter\"\n    },\n    outputs: {\n      chnaged: \"chnaged\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function FilterTextboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \" Filter: \");\n        i0.ɵɵelementStart(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterTextboxComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.filter = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.filter);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["EventEmitter","FilterTextboxComponent","filter","_filter","val","chnaged","emit","constructor","ngOnInit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","FilterTextboxComponent_Template","rf","ctx","i0","ɵɵtext","ɵɵelementStart","ɵɵlistener","FilterTextboxComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/workspaces/angular-app/my-app/src/app/customers/customers-list/filter-textbox.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'filter-textbox',\n  template: ` Filter: <input type=\"text\" [(ngModel)]=\"filter\" /> `,\n})\nexport class FilterTextboxComponent implements OnInit {\n  private _filter: string;\n  @Input() get filter() {\n    return this._filter;\n  }\n\n  set filter(val: string) {\n    this._filter = val;\n    this.chnaged.emit(this.filter); //Raise changed event\n  }\n\n  @Output() chnaged: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n"],"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;;;AAM9E,OAAM,MAAOC,sBAAsB;EAEjC,IAAaC,MAAMA,CAAA;IACjB,OAAO,IAAI,CAACC,OAAO;EACrB;EAEA,IAAID,MAAMA,CAACE,GAAW;IACpB,IAAI,CAACD,OAAO,GAAGC,GAAG;IAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;EAClC;EAIAK,YAAA;IAFU,KAAAF,OAAO,GAAyB,IAAIL,YAAY,EAAU;EAErD;EAEfQ,QAAQA,CAAA,GAAI;EAAC,QAAAC,CAAA,G;qBAfFR,sBAAsB;EAAA;EAAA,QAAAS,EAAA,G;UAAtBT,sBAAsB;IAAAU,SAAA;IAAAC,MAAA;MAAAV,MAAA;IAAA;IAAAW,OAAA;MAAAR,OAAA;IAAA;IAAAS,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAFrBE,EAAA,CAAAC,MAAA,gBAAQ;QAAAD,EAAA,CAAAE,cAAA,eAA0C;QAAvBF,EAAA,CAAAG,UAAA,2BAAAC,+DAAAC,MAAA;UAAA,OAAAN,GAAA,CAAAlB,MAAA,GAAAwB,MAAA;QAAA,EAAoB;QAAvCL,EAAA,CAAAM,YAAA,EAA0C;;;QAAvBN,EAAA,CAAAO,SAAA,GAAoB;QAApBP,EAAA,CAAAQ,UAAA,YAAAT,GAAA,CAAAlB,MAAA,CAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}